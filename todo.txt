- REST api(flask)
- graphql api 
- keras wrapper
- add some layer between api and wrapper
- front-end (graphs etc.)
- documentation (generated)(python and typescript)
- api documentation witch swagger
- dockerize it
- jenkins pipeline
- unit tests
- infrastructure tests (?) (https://testinfra.readthedocs.io/en/latest/)
- selenium (use selenoid) front-end tests
- api tests
- desktop app 
- mobile app


-------------------------

kubernetes:
5 pods:
 - node
 - api
 - dashboard
 - nats
 - mongodb

frontend:
 - display layers info (more readable) in network details
 - back button

other:
 - clear logs and temp files
 - node data synchronisation may cause memory leak
 - probably wont work for more nodes yet
 - better handle backend errors
 - try use Numba JIT (in data utils ?)
 - use terraform(or something else, pulumi) to set-up linux VM (jenkins slave)
 - use docker compose

data:
 - upload files witch appi
 Process:
  1. Upload data using API
    a). save file (inside api container)
    b). call service that update data_sets dictionary (need to synchronize it across nodes)
  2. when node want to use data
   a) if file exist will use it
   b) if file not exist will call api that will send required files

tests:
 - extend front end tests
    